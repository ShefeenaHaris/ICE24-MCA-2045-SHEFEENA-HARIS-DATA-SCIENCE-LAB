# -*- coding: utf-8 -*-
"""prgm18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ugZZz_haG8TDzvJGeUKPa-5a0PXotsiz
"""

import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics
import matplotlib.pyplot as plt

advertising = pd.read_csv('/content/Advertising.csv')
print(advertising.head())
print(advertising.describe())
print(advertising.info())

print("Feature values:")
x= advertising.iloc[:,:-1]
print(x)

print("Target values:")
y= advertising.iloc[:,-1]
print(y)

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3,
random_state=42)
regressor = LinearRegression()
regressor.fit(X_train, y_train)
print("Intercept:",regressor.intercept_)
print("Coefficients:",regressor.coef_)

y_pred = regressor.predict(X_test)
print("Actual vs Predicted values:" )
for actual, predicted in zip(y_test,y_pred):
  print(f"Actual Value:{actual} Predicted value: {predicted}")

mislabeled_points =np.sum(np.round(y_test) != np.round(y_pred))
print("Number of Mislabeled points:",mislabeled_points)

mae = metrics.mean_absolute_error(y_test, y_pred)
mse = metrics.mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print("Mean Absolute Error:",mae)
print("Mean Squared Error:",mse)
print("Root Mean Squared Error:",rmse)

plt.figure(figsize=(10, 6))
plt.scatter(range(len(y_test)),y_test, color='blue',label='Actual values')
plt.scatter(range(len(y_pred)),y_pred, color='red',label='Predicted values',marker='x')
plt.legend()
plt.xlabel("Data Point Index")
plt.ylabel("Target Variable")
plt.title("Actual vs Predicted Values")
plt.legend()
plt.show()